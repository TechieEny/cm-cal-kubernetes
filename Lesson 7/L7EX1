###########################################
# Create a Volume with Declarative (YAML)
############################################
#------------------------------------
# Create supporting mount directories
#------------------------------------
mkdir -p /tmp/data /data /cache /mnt/data

#------------------------------------
# Create mount
#------------------------------------
cat << EOF >> ~/volume-pod.yaml
apiVersion: v1
kind: Pod
metadata:
  name: sharevol
spec:
  containers:
  - name: c1
    image: centos:7
    command:
      - "bin/bash"
      - "-c"
      - "sleep 10000"
    volumeMounts:
      - name: xchange
        mountPath: "/tmp/xchange"
  - name: c2
    image: centos:7
    command:
      - "bin/bash"
      - "-c"
      - "sleep 10000"
    volumeMounts:
      - name: xchange
        mountPath: "/tmp/data"
  volumes:
  - name: xchange
    emptyDir: {}
EOF

kubectl apply -f ~/volume-pod.yaml

kubectl describe pod sharevol

############################################
# Create a Volume with Host Path (YAML)
############################################
cat << EOF >> ~/hostPath-pod.yaml
apiVersion: v1
kind: Pod
metadata:
  name: test-pd
spec:
  containers:
  - image: k8s.gcr.io/test-webserver
    name: test-container
    volumeMounts:
    - mountPath: /test-pd
      name: test-volume
  volumes:
  - name: test-volume
    hostPath:
      # directory location on host
      path: /data
      # this field is optional
      type: Directory
EOF

kubectl apply -f ~/hostPath-pod.yaml
kubectl describe pod/test-pd

############################################
# Create a Volume with Empty Dir (YAML)
############################################

cat << EOF >> ~/emptyDirPod.yaml
	apiVersion: v1
kind: Pod
metadata:
  name: test-pd
spec:
  containers:
  - image: k8s.gcr.io/test-webserver
    name: test-container
    volumeMounts:
    - mountPath: /cache
      name: cache-volume
  volumes:
  - name: cache-volume
    emptyDir: {}
 EOF

 kubectl apply -f ~/emptyDirPod.yaml
 kubectl describe pod/test-pd

 
############################################
# Create a Volume with NFS Share (YAML)
############################################
cat << EOF >> ~/nfs-share-pod.yaml
apiVersion: v1
kind: ReplicationController
metadata:
  name: nfs-busybox
spec:
  replicas: 2
  selector:
    name: nfs-busybox
  template:
    metadata:
      labels:
        name: nfs-busybox
    spec:
      containers:
      - image: busybox
        command:
          - sh
          - -c
          - 'while true; do date > /mnt/index.html; hostname >> /mnt/index.html; sleep $(($RANDOM % 5 + 5)); done'
        imagePullPolicy: IfNotPresent
        name: busybox
        volumeMounts:
          # name must match the volume name below
          - name: nfs
            mountPath: "/mnt"
      volumes:
      - name: nfs
        persistentVolumeClaim:
          claimName: nfs
EOF

kubectl apply -f ~/nfs-share-pod.yaml
kubectl describe pod/test-pd

############################################
# Create a PersistentVolume with Declarative (YAML)
############################################

cat << EOF >> pv-volume.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: task-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
EOF

kubectl apply -f pv-volume.yaml

kubectl get pv task-pv-volume
